"use strict";
/*
 * Copyright (c) 2018 by Filestack
 * Some rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
Object.defineProperty(exports, "__esModule", { value: true });
var shouldRetry_1 = require("./shouldRetry");
var error_1 = require("../error");
var testResponse = function (code) {
    if (code === void 0) { code = 200; }
    return ({
        status: code,
        statusText: 'test',
        headers: {},
        data: {},
        config: {},
    });
};
describe('Request/Helpers/shouldRetry', function () {
    describe('shouldRetry', function () {
        it('should retry on network error', function () {
            expect(shouldRetry_1.shouldRetry(new error_1.FsRequestError('', null, testResponse(), error_1.FsRequestErrorCode.NETWORK))).toEqual(true);
        });
        it('should retry on server error', function () {
            expect(shouldRetry_1.shouldRetry(new error_1.FsRequestError('', null, testResponse(), error_1.FsRequestErrorCode.SERVER))).toEqual(true);
        });
        it('should retry on server error', function () {
            expect(shouldRetry_1.shouldRetry(new error_1.FsRequestError('', null, testResponse(), error_1.FsRequestErrorCode.TIMEOUT))).toEqual(true);
        });
        it('should retry on request 5xx code', function () {
            // @ts-ignore
            expect(shouldRetry_1.shouldRetry(new error_1.FsRequestError('', null, testResponse(504), error_1.FsRequestErrorCode.OTHER))).toEqual(true);
        });
        it('should not retry on 4xx codes', function () {
            // @ts-ignore
            expect(shouldRetry_1.shouldRetry(new error_1.FsRequestError('', null, testResponse(404), error_1.FsRequestErrorCode.REQUEST))).toEqual(false);
        });
        it('should not retry on request error', function () {
            // @ts-ignore
            expect(shouldRetry_1.shouldRetry(new error_1.FsRequestError('', null, testResponse(), error_1.FsRequestErrorCode.REQUEST))).toEqual(false);
        });
        it('should not retry on request aborted', function () {
            // @ts-ignore
            expect(shouldRetry_1.shouldRetry(new error_1.FsRequestError('', null, testResponse(), error_1.FsRequestErrorCode.ABORTED))).toEqual(false);
        });
    });
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9saWIvcmVxdWVzdC9oZWxwZXJzL3Nob3VsZFJldHJ5LnNwZWMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBOzs7Ozs7Ozs7Ozs7Ozs7R0FlRzs7QUFFSCw2Q0FBNEM7QUFDNUMsa0NBQThEO0FBRzlELElBQU0sWUFBWSxHQUFHLFVBQUMsSUFBa0I7SUFBbEIscUJBQUEsRUFBQSxVQUFrQjtJQUFpQixPQUFBLENBQUM7UUFDeEQsTUFBTSxFQUFFLElBQUk7UUFDWixVQUFVLEVBQUUsTUFBTTtRQUNsQixPQUFPLEVBQUUsRUFBRTtRQUNYLElBQUksRUFBRSxFQUFFO1FBQ1IsTUFBTSxFQUFFLEVBQUU7S0FDWCxDQUFDO0FBTnVELENBTXZELENBQUM7QUFFSCxRQUFRLENBQUMsNkJBQTZCLEVBQUU7SUFDdEMsUUFBUSxDQUFDLGFBQWEsRUFBRTtRQUN0QixFQUFFLENBQUMsK0JBQStCLEVBQUU7WUFDbEMsTUFBTSxDQUFDLHlCQUFXLENBQUMsSUFBSSxzQkFBYyxDQUFDLEVBQUUsRUFBRSxJQUFJLEVBQUUsWUFBWSxFQUFFLEVBQUUsMEJBQWtCLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUM5RyxDQUFDLENBQUMsQ0FBQztRQUVILEVBQUUsQ0FBQyw4QkFBOEIsRUFBRTtZQUNqQyxNQUFNLENBQUMseUJBQVcsQ0FBQyxJQUFJLHNCQUFjLENBQUMsRUFBRSxFQUFFLElBQUksRUFBRSxZQUFZLEVBQUUsRUFBRSwwQkFBa0IsQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQzdHLENBQUMsQ0FBQyxDQUFDO1FBRUgsRUFBRSxDQUFDLDhCQUE4QixFQUFFO1lBQ2pDLE1BQU0sQ0FBQyx5QkFBVyxDQUFDLElBQUksc0JBQWMsQ0FBQyxFQUFFLEVBQUUsSUFBSSxFQUFFLFlBQVksRUFBRSxFQUFFLDBCQUFrQixDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDOUcsQ0FBQyxDQUFDLENBQUM7UUFFSCxFQUFFLENBQUMsa0NBQWtDLEVBQUU7WUFDckMsYUFBYTtZQUNiLE1BQU0sQ0FBQyx5QkFBVyxDQUFDLElBQUksc0JBQWMsQ0FBQyxFQUFFLEVBQUUsSUFBSSxFQUFFLFlBQVksQ0FBQyxHQUFHLENBQUMsRUFBRSwwQkFBa0IsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQy9HLENBQUMsQ0FBQyxDQUFDO1FBRUgsRUFBRSxDQUFDLCtCQUErQixFQUFFO1lBQ2xDLGFBQWE7WUFDYixNQUFNLENBQUMseUJBQVcsQ0FBQyxJQUFJLHNCQUFjLENBQUMsRUFBRSxFQUFFLElBQUksRUFBRSxZQUFZLENBQUMsR0FBRyxDQUFDLEVBQUUsMEJBQWtCLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUNsSCxDQUFDLENBQUMsQ0FBQztRQUVILEVBQUUsQ0FBQyxtQ0FBbUMsRUFBRTtZQUN0QyxhQUFhO1lBQ2IsTUFBTSxDQUFDLHlCQUFXLENBQUMsSUFBSSxzQkFBYyxDQUFDLEVBQUUsRUFBRSxJQUFJLEVBQUUsWUFBWSxFQUFFLEVBQUUsMEJBQWtCLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUMvRyxDQUFDLENBQUMsQ0FBQztRQUVILEVBQUUsQ0FBQyxxQ0FBcUMsRUFBRTtZQUN4QyxhQUFhO1lBQ2IsTUFBTSxDQUFDLHlCQUFXLENBQUMsSUFBSSxzQkFBYyxDQUFDLEVBQUUsRUFBRSxJQUFJLEVBQUUsWUFBWSxFQUFFLEVBQUUsMEJBQWtCLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUMvRyxDQUFDLENBQUMsQ0FBQztJQUNMLENBQUMsQ0FBQyxDQUFDO0FBQ0wsQ0FBQyxDQUFDLENBQUMiLCJmaWxlIjoibGliL3JlcXVlc3QvaGVscGVycy9zaG91bGRSZXRyeS5zcGVjLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLypcbiAqIENvcHlyaWdodCAoYykgMjAxOCBieSBGaWxlc3RhY2tcbiAqIFNvbWUgcmlnaHRzIHJlc2VydmVkLlxuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuXG5pbXBvcnQgeyBzaG91bGRSZXRyeSB9IGZyb20gJy4vc2hvdWxkUmV0cnknO1xuaW1wb3J0IHsgRnNSZXF1ZXN0RXJyb3JDb2RlLCBGc1JlcXVlc3RFcnJvciB9IGZyb20gJy4uL2Vycm9yJztcbmltcG9ydCB7IEZzUmVzcG9uc2UgfSBmcm9tICcuLy4uL3R5cGVzJztcblxuY29uc3QgdGVzdFJlc3BvbnNlID0gKGNvZGU6IG51bWJlciA9IDIwMCk6IEZzUmVzcG9uc2UgPT4gKHtcbiAgc3RhdHVzOiBjb2RlLFxuICBzdGF0dXNUZXh0OiAndGVzdCcsXG4gIGhlYWRlcnM6IHt9LFxuICBkYXRhOiB7fSxcbiAgY29uZmlnOiB7fSxcbn0pO1xuXG5kZXNjcmliZSgnUmVxdWVzdC9IZWxwZXJzL3Nob3VsZFJldHJ5JywgKCkgPT4ge1xuICBkZXNjcmliZSgnc2hvdWxkUmV0cnknLCAoKSA9PiB7XG4gICAgaXQoJ3Nob3VsZCByZXRyeSBvbiBuZXR3b3JrIGVycm9yJywgKCkgPT4ge1xuICAgICAgZXhwZWN0KHNob3VsZFJldHJ5KG5ldyBGc1JlcXVlc3RFcnJvcignJywgbnVsbCwgdGVzdFJlc3BvbnNlKCksIEZzUmVxdWVzdEVycm9yQ29kZS5ORVRXT1JLKSkpLnRvRXF1YWwodHJ1ZSk7XG4gICAgfSk7XG5cbiAgICBpdCgnc2hvdWxkIHJldHJ5IG9uIHNlcnZlciBlcnJvcicsICgpID0+IHtcbiAgICAgIGV4cGVjdChzaG91bGRSZXRyeShuZXcgRnNSZXF1ZXN0RXJyb3IoJycsIG51bGwsIHRlc3RSZXNwb25zZSgpLCBGc1JlcXVlc3RFcnJvckNvZGUuU0VSVkVSKSkpLnRvRXF1YWwodHJ1ZSk7XG4gICAgfSk7XG5cbiAgICBpdCgnc2hvdWxkIHJldHJ5IG9uIHNlcnZlciBlcnJvcicsICgpID0+IHtcbiAgICAgIGV4cGVjdChzaG91bGRSZXRyeShuZXcgRnNSZXF1ZXN0RXJyb3IoJycsIG51bGwsIHRlc3RSZXNwb25zZSgpLCBGc1JlcXVlc3RFcnJvckNvZGUuVElNRU9VVCkpKS50b0VxdWFsKHRydWUpO1xuICAgIH0pO1xuXG4gICAgaXQoJ3Nob3VsZCByZXRyeSBvbiByZXF1ZXN0IDV4eCBjb2RlJywgKCkgPT4ge1xuICAgICAgLy8gQHRzLWlnbm9yZVxuICAgICAgZXhwZWN0KHNob3VsZFJldHJ5KG5ldyBGc1JlcXVlc3RFcnJvcignJywgbnVsbCwgdGVzdFJlc3BvbnNlKDUwNCksIEZzUmVxdWVzdEVycm9yQ29kZS5PVEhFUikpKS50b0VxdWFsKHRydWUpO1xuICAgIH0pO1xuXG4gICAgaXQoJ3Nob3VsZCBub3QgcmV0cnkgb24gNHh4IGNvZGVzJywgKCkgPT4ge1xuICAgICAgLy8gQHRzLWlnbm9yZVxuICAgICAgZXhwZWN0KHNob3VsZFJldHJ5KG5ldyBGc1JlcXVlc3RFcnJvcignJywgbnVsbCwgdGVzdFJlc3BvbnNlKDQwNCksIEZzUmVxdWVzdEVycm9yQ29kZS5SRVFVRVNUKSkpLnRvRXF1YWwoZmFsc2UpO1xuICAgIH0pO1xuXG4gICAgaXQoJ3Nob3VsZCBub3QgcmV0cnkgb24gcmVxdWVzdCBlcnJvcicsICgpID0+IHtcbiAgICAgIC8vIEB0cy1pZ25vcmVcbiAgICAgIGV4cGVjdChzaG91bGRSZXRyeShuZXcgRnNSZXF1ZXN0RXJyb3IoJycsIG51bGwsIHRlc3RSZXNwb25zZSgpLCBGc1JlcXVlc3RFcnJvckNvZGUuUkVRVUVTVCkpKS50b0VxdWFsKGZhbHNlKTtcbiAgICB9KTtcblxuICAgIGl0KCdzaG91bGQgbm90IHJldHJ5IG9uIHJlcXVlc3QgYWJvcnRlZCcsICgpID0+IHtcbiAgICAgIC8vIEB0cy1pZ25vcmVcbiAgICAgIGV4cGVjdChzaG91bGRSZXRyeShuZXcgRnNSZXF1ZXN0RXJyb3IoJycsIG51bGwsIHRlc3RSZXNwb25zZSgpLCBGc1JlcXVlc3RFcnJvckNvZGUuQUJPUlRFRCkpKS50b0VxdWFsKGZhbHNlKTtcbiAgICB9KTtcbiAgfSk7XG59KTtcbiJdfQ==
