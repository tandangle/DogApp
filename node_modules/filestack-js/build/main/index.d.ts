import { SecurityOptions, getSecurity, validateWebhookSignature, WebhookValidatePayload } from './lib/api/security';
import { Client, ClientOptions, Security } from './lib/client';
import { PickerOptions, PickerInstance, PickerUploadDoneCallback, PickerFileMetadata, PickerResponse, PickerDisplayMode } from './lib/picker';
import { TransformSchema } from './schema/transforms.schema';
import { TransformOptions } from './lib/api/transform';
import { RetrieveOptions, MetadataOptions } from './lib/api/file';
import { UploadTags } from './lib/api/upload/file';
import { InputFile } from './lib/api/upload/file_tools';
import { UploadOptions } from './lib/api/upload/types';
import { StoreUploadOptions } from './lib/api/upload';
import { PreviewOptions } from './lib/api/preview';
import { PrefetchOptions, PrefetchResponse, PrefetchPermissions, PrefetchEvents } from './lib/api/prefetch';
import { FilestackError } from './filestack_error';
import { getMimetype } from './lib/utils/index';
/**
 * Initialize client with given config
 *
 * @param apikey
 * @param options
 */
export declare const Filestack: (apikey: string, options?: ClientOptions) => Client;
export declare const init: (apikey: string, options?: ClientOptions) => Client;
/**
 * filestack-js version. Interpolated at build time.
 */
export declare const version = "3.16.0";
export * from './lib/api/transform';
export * from './lib/filelink';
export * from './filestack_error';
export * from './lib/request';
export * from './lib/utils';
export { UploadTags, TransformSchema, SecurityOptions, getSecurity, validateWebhookSignature, WebhookValidatePayload, ClientOptions, PickerOptions, PickerInstance, Security, TransformOptions, RetrieveOptions, InputFile, UploadOptions, StoreUploadOptions, MetadataOptions, PreviewOptions, PickerUploadDoneCallback, PickerFileMetadata, PickerResponse, Client, FilestackError, PickerDisplayMode, getMimetype, PrefetchOptions, PrefetchResponse, PrefetchPermissions, PrefetchEvents };
