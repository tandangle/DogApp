import { FsRequestOptions, FsResponse } from './types';
/**
 * Filestack error codes (common for browser and node)
 *
 * @export
 * @enum {number}
 */
export declare enum FsRequestErrorCode {
    ABORTED = "ABORTED",
    NETWORK = "NETWORK",
    TIMEOUT = "TIMEDOUT",
    SERVER = "SERVER",
    REQUEST = "REQUEST",
    OTHER = "OTHER",
    REDIRECT = "REDIRECT"
}
/**
 * Custom Filestack Request error class
 *
 * @export
 * @class FsRequestError
 * @extends {Error}
 */
export declare class FsRequestError extends Error {
    /**
     * Error details, ie validation errors
     *
     * @type {*}
     * @memberof FilestackError
     */
    readonly config: FsRequestOptions;
    readonly response: FsResponse;
    readonly code: FsRequestErrorCode;
    /**
     * Creates an instance of FsRequestError.
     *
     * @param {string} message
     * @param {*} config
     * @param {FsResponse} [response]
     * @param {FsRequestErrorCode} [code]
     * @memberof FsRequestError
     */
    constructor(message: string, config: any, response?: FsResponse, code?: FsRequestErrorCode);
}
